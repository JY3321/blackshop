<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cugb.dao.GoodsMapper" >


   <resultMap id="CommentExtend" type="com.cugb.pojo.CommentExtend" >
    <id column="goodsId" property="id" jdbcType="INTEGER" />
    <result column="catelog_id" property="catelogId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="REAL" />
    <result column="real_price" property="realPrice" jdbcType="REAL" />
    <result column="start_time" property="startTime" jdbcType="VARCHAR" />
    <result column="end_time" property="endTime" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="polish_time" property="polishTime" jdbcType="VARCHAR" />
    <collection property="comments" ofType="com.cugb.pojo.Comments">
    	<id column="commentsId" property="id" jdbcType="INTEGER" />
    	<result column="goods_id" property="goodsId" jdbcType="LONGVARCHAR" />
	    <result column="content" property="content" jdbcType="LONGVARCHAR" />
	    <result column="create_at" property="createAt" jdbcType="VARCHAR" />
	    <association property="user"  javaType="com.cugb.pojo.User" resultMap="userMap"/>
    </collection>
  </resultMap>
  <resultMap id="userMap" type="com.cugb.pojo.User" >
    <result column="phone" property="phone" jdbcType="CHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="CHAR" />
    <result column="QQ" property="qq" jdbcType="VARCHAR" />
    <result column="ucreate_at" property="createAt" jdbcType="VARCHAR" />
    <result column="goods_num" property="goodsNum" jdbcType="INTEGER" />
    <result column="power" property="power" jdbcType="INTEGER" />
    <result column="last_login" property="lastLogin" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
  </resultMap>
  
  
  <resultMap id="BaseResultMap" type="com.cugb.pojo.Goods" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="catelog_id" property="catelogId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="REAL" />
    <result column="real_price" property="realPrice" jdbcType="REAL" />
    <result column="start_time" property="startTime" jdbcType="VARCHAR" />
    <result column="end_time" property="endTime" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="polish_time" property="polishTime" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="ResultMapWithBLOBs" type="com.cugb.pojo.Goods" extends="BaseResultMap" >
    <result column="describle" property="describle" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, catelog_id, user_id, name, price, real_price, start_time, polish_time, end_time, status
  </sql>
  <sql id="Blob_Column_List" >
    describle
  </sql>
  <sql id="Factor">
--     and end_time >= now() order by polish_time DESC
  </sql>
  
  
  <select id="selectCommentsByGoodsId"  resultMap="CommentExtend" parameterType="java.lang.Integer">
  	select
  		aa.id 'goodsId',
  		aa.catelog_id,
  		aa.user_id,
  		aa.name,
  		aa.price,
  		aa.real_price,
  		aa.start_time,
  		aa.end_time,
  		aa.status,
  		aa.polish_time,
  		dd.*
  		from goods aa
  		left join (
  			select 
  			bb.id as 'commentsId',
	  		bb.content,
	  		bb.goods_id,
	  		bb.create_at,
	  		cc.id as 'userid',
	  		cc.phone,
	  		cc.username,
	  		cc.password,
	  		cc.QQ,
	  		cc.create_at 'ucreate_at',
	  		cc.goods_num,
	  		cc.power,
	  		cc.last_login,
	  		cc.status
	  		from user cc,comments bb
	  		where cc.id=bb.user_id
  		) as dd on dd.goods_id = aa.id
  		where aa.id=#{id}
  </select>
  
  
     <insert id="addComments">
	  insert into comments(id,user_id,goods_id,content,create_at) values(#{id},#{user.id},#{goods.id},#{content},#{createAt})
	  </insert>
  
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    *
    from goods
    where id = #{id,jdbcType=INTEGER} and status=1;
    <include refid="Factor"></include>
  </select>
  
   <select id="selectById" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    *
    from goods
    where id = #{id,jdbcType=INTEGER};
    <include refid="Factor"></include>
  </select>
  
  <select id="searchGoods" resultMap="ResultMapWithBLOBs" parameterType="String" >
    select
    *
    from goods
    where status=1  and  (name like concat('%',#{name},'%') OR describle like concat('%',#{describle},'%'));
    <include refid="Factor"></include>
  </select>
  
  <select id="selectByStr" resultMap="ResultMapWithBLOBs">
    select * from goods where  status=1
    <if test="name != null" >
     AND ( name like concat('%',#{name},'%')
    </if>
    <if test="describle != null" >
     OR describle like concat('%',#{describle},'%'))
    </if> 
    order by polish_time DESC limit #{limit,jdbcType=INTEGER}
    <include refid="Factor"></include>
  </select>
  
  <select id="selectByCatelog" resultMap="ResultMapWithBLOBs">
    select * from goods
    where catelog_id = #{catelog_id,jdbcType=INTEGER}
    <if test="name != null" >
    AND ( name like concat('%',#{name},'%')
    </if>
    <if test="describle != null" >
      OR describle like concat('%',#{describle},'%'))
    </if>
     AND status=1;
    <include refid="Factor"></include>
  </select>
  <select id="selectAllGoods" resultMap="ResultMapWithBLOBs">
    select * from goods where and status=1;
  </select>
  <select id="getGoodsByUserId" resultMap="ResultMapWithBLOBs">
    select * from goods where user_id = #{user_id,jdbcType=INTEGER} and status=1;
  </select>

  <select id="selectByCatelogOrderByDate" resultMap="ResultMapWithBLOBs">
    select * from goods
    where catelog_id = #{catelogId,jdbcType=INTEGER} and status=1
    order by polish_time DESC
    limit #{limit,jdbcType=INTEGER}
  </select>
  
   <select id="selectOrderByDate" resultMap="ResultMapWithBLOBs">
    select * from goods where status=1
    order by polish_time DESC
    limit #{limit,jdbcType=INTEGER}
  </select>
  <!-- 后台查询 -->
  <select id="getGoodsList" resultMap="ResultMapWithBLOBs" parameterType="String">
    select * from goods order by id desc
  </select>
  
   <select id="getPageGoodsByGoods" resultMap="ResultMapWithBLOBs">
    select * from goods where  1=1
    <if test="id != '' and id != null" >
     AND id like concat('%',#{id},'%')
    </if>
     <if test="name != '' and name != null" >
     AND name like concat('%',#{name},'%')
    </if> 
    <if test="status != null">
     AND status like concat('%',#{status},'%')
    </if>
  </select>
  
  <delete id="deleteByPrimaryKeys" parameterType="java.lang.Integer" >
     delete from goods where id = #{id,jdbcType=INTEGER}
  </delete>

  <update id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
     update goods
   <set>status=0</set>
   where id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="insert" parameterType="com.cugb.pojo.Goods" useGeneratedKeys="true" keyProperty="id">
    insert into goods (id, catelog_id, user_id,
    name, price, real_price, start_time,
    end_time, polish_time,describle)
    values (#{id,jdbcType=INTEGER}, #{catelogId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
    #{name,jdbcType=VARCHAR}, #{price,jdbcType=REAL}, #{realPrice,jdbcType=REAL}, #{startTime,jdbcType=VARCHAR},
    #{endTime,jdbcType=VARCHAR}, #{polishTime,jdbcType=VARCHAR}, #{describle,jdbcType=LONGVARCHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.cugb.pojo.Goods" >
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="catelogId != null" >
        catelog_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="realPrice != null" >
        real_price,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="polishTime != null" >
        polish_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="describle != null" >
        describle,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="catelogId != null" >
        #{catelogId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=REAL},
      </if>
      <if test="realPrice != null" >
        #{realPrice,jdbcType=REAL},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        #{polishTime,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="describle != null" >
        #{describle,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cugb.pojo.Goods" >
    update goods
    <set >
      <if test="catelogId != null" >
        catelog_id = #{catelogId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=REAL},
      </if>
      <if test="realPrice != null" >
        real_price = #{realPrice,jdbcType=REAL},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        polish_time = #{polishTime,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="describle != null" >
        describle = #{describle,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.cugb.pojo.Goods" >
    update goods
    set catelog_id = #{catelogId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      real_price = #{realPrice,jdbcType=REAL},
      start_time = #{startTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR},
      polish_time = #{polishTime,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      describle = #{describle,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cugb.pojo.Goods" >
    update goods
    set catelog_id = #{catelogId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      real_price = #{realPrice,jdbcType=REAL},
      start_time = #{startTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR},
      polish_time = #{polishTime,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      describle = #{describle,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateGoodsByGoodsId" parameterType="com.cugb.pojo.Goods" >
    update goods
    set status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  
</mapper>